{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; //import Logic from \"./Logic\";\n\nimport Board from \"./Board\";\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: this.getBoard(),\n      checkers: this.getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null,\n      welcome: true\n    };\n  }\n\n  getBoard() {\n    let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n    return board;\n  }\n\n  getCheckers() {\n    let checkers = [{\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 6,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 1,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 3,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 5,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 7,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 7,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 0,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 2,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 4,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 7,\n      removed: false\n    }];\n    return checkers;\n  }\n\n  changeWelcome() {\n    this.setState({\n      welcome: false\n    });\n  }\n\n  setSquare(row, col) {\n    this.setState({\n      selectedSquare: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  selectSquare(row, col) {\n    let isChecker = this.state.board[row][col];\n    let player = isChecker && this.state.checkers[isChecker].player;\n\n    if (!this.state.selectedSquare && isChecker && player === this.state.turn) {\n      this.setSquare(row, col);\n      console.log(\"🚪This is resource square of current player\", row, col);\n    } else if (this.state.selectedSquare) {\n      console.log(\"🚩This is destination square of current player\", row, col);\n      this.handleMove(row, col);\n    } else {\n      console.log(\"🚫This square is OR null OR not of current player\", row, col);\n    }\n  }\n\n  handleMove(destRow, destCol) {\n    console.log(\"handling move...\");\n    let board = this.state.board;\n    let selected = this.state.selectedSquare;\n    let checker = board[selected.row][selected.column];\n\n    if (!this.canMoveChecker(checker, destRow, destCol)) {\n      console.log(\"❌illegal move❌\");\n      return;\n    } //board.makeAnimate(checker,destRow,destCol);\n\n\n    let isJump = this.isJumpMove(checker, destRow, destCol);\n    let isKingJump = this.isKingJump(checker, destRow, destCol);\n    let becameKing = false;\n    this.moveChecker(checker, destRow, destCol);\n\n    if (!this.isKing(checker) && this.getPlayer(checker) === PLAYER_ONE && destRow === 0 || this.getPlayer(checker) === PLAYER_TWO && destRow === board.length - 1) {\n      console.log(\"making King....\");\n      becameKing = true;\n      this.makeKing(checker);\n    }\n\n    if (!becameKing && isKingJump && this.canKeepJumping(checker)) {\n      this.setState({\n        board: board,\n        selectedSquare: {\n          row: destRow,\n          column: destCol\n        }\n      });\n    } else if (!becameKing && isJump && this.canKeepJumping(checker)) {\n      this.setState({\n        board: board,\n        selectedSquare: {\n          row: destRow,\n          column: destCol\n        }\n      });\n    } else {\n      this.setState({\n        board: board,\n        turn: this.nextPlayer(),\n        selectedSquare: null,\n        animation: true\n      });\n    }\n  }\n\n  canSelectSquare(row, column) {\n    let square = this.state.board[row][column];\n\n    if (!square && square !== 0) {\n      return false;\n    }\n\n    let player = this.state.checkers[square].player;\n    return player === this.state.turn;\n  }\n\n  nextPlayer() {\n    return this.state.turn === PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE;\n  }\n\n  restart() {\n    this.setState({\n      board: this.getBoard(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null\n    });\n  }\n\n  hasMoves(player) {\n    let moves = this.getAllMoves(player);\n    return moves.jumps.length + moves.singles.length > 0;\n  }\n\n  canMoveChecker(checker, row, col) {\n    let player = this.state.checkers[checker].player;\n    let playerMoves = this.getAllMoves(player);\n    let checkerMoves = this.getMoves(checker);\n    let playerJumps = playerMoves.jumps;\n    let checkerJumps = checkerMoves.jumps;\n\n    if (playerJumps.length && !checkerJumps.length) {\n      checkerMoves = {\n        singles: [],\n        jumps: []\n      };\n    }\n\n    let moves = checkerMoves;\n    let movesToCheck = moves.jumps.length ? moves.jumps : moves.singles;\n\n    for (let move of movesToCheck) {\n      if (move.row === row && move.col === col) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getAllMoves(player) {\n    let moves = {\n      jumps: [],\n      singles: []\n    };\n    let checkers = this.state.checkers;\n    checkers.forEach((checker, i) => {\n      if (checker.player === player && !checker.removed) {\n        let cMoves = this.getMoves(i);\n        moves.jumps = moves.jumps.concat(cMoves.jumps);\n        moves.singles = moves.singles.concat(cMoves.singles);\n      }\n    });\n    return moves;\n  }\n\n  canKeepJumping(checker) {\n    let moves = this.getMoves(checker).jumps;\n\n    if (moves.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getMoves(checker) {\n    let singles = [];\n    let jumps = [];\n    let c = this.state.checkers[checker];\n    let topRow = c.row - 1;\n    let bottomRow = c.row + 1;\n    let leftCol = c.col - 1;\n    let rightCol = c.col + 1;\n\n    if (c.player === this.state.PLAYER_ONE || c.isKing) {\n      jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\n\n      if (!jumps.length) {\n        singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\n      }\n    }\n\n    if (c.player === this.state.PLAYER_TWO || c.isKing) {\n      jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c));\n\n      if (!jumps.length) {\n        singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\n      }\n    }\n\n    return {\n      singles: singles,\n      jumps: jumps\n    };\n  }\n\n  checkAdjacent(row, left, right, checker) {\n    let moves = [];\n\n    if (row >= this.state.board.length || row < 0) {\n      return moves;\n    }\n\n    if (checker.isKing && checker.row - row > 0) {\n      let i = 0;\n\n      while (row - i >= 0 && left - i >= 0 && this.state.board[row - i][left - i] === null) {\n        moves.push({\n          row: row - i,\n          col: left - i\n        });\n        i++;\n      }\n    } else if (checker.isKing && checker.row - row < 0) {\n      let i = 0;\n\n      while (row + i < this.state.board.length && left - i >= 0 && this.state.board[row + i][left - i] === null) {\n        moves.push({\n          row: row + i,\n          col: left - i\n        });\n        i++;\n      }\n    } else if (this.state.board[row][left] === null) {\n      moves.push({\n        row: row,\n        col: left\n      });\n    }\n\n    if (checker.isKing && checker.row - row > 0) {\n      let i = 0;\n\n      while (row - i >= 0 && right + i < this.state.board.length && this.state.board[row - i][right + i] === null) {\n        moves.push({\n          row: row - i,\n          col: right + i\n        });\n        i++;\n      }\n    } else if (checker.isKing && checker.row - row < 0) {\n      let i = 0;\n\n      while (row + i < this.state.board.length && right + i < this.state.board.length && this.state.board[row + i][right + i] === null) {\n        moves.push({\n          row: row + i,\n          col: right + i\n        });\n        i++;\n      }\n    } else if (this.state.board[row][right] === null) {\n      moves.push({\n        row: row,\n        col: right\n      });\n    }\n\n    return moves;\n  }\n\n  checkJumps(row, nextRow, left, right, nextLeft, nextRight, checker) {\n    let moves = [];\n\n    if (row >= this.state.board.length || row < 0 || nextRow >= this.state.board.length || nextRow < 0) {\n      return moves;\n    }\n\n    let adjacent = this.state.board[row][left];\n\n    if (adjacent != null && this.checkers[adjacent].player !== checker.player) {\n      if (checker.isKing && nextRow - row === -1) {\n        let i = 0;\n\n        while (nextRow - i >= 0 && nextLeft - i >= 0 && this.state.board[nextRow - i][nextLeft - i] === null) {\n          moves.push({\n            row: nextRow - i,\n            col: nextLeft - i\n          });\n          i++;\n        }\n      } else if (checker.isKing && nextRow - row === 1) {\n        let i = 0;\n\n        while (nextRow + i < this.state.board.length && nextLeft - i >= 0 && this.state.board[nextRow + i][nextLeft - i] === null) {\n          moves.push({\n            row: nextRow + i,\n            col: nextLeft - i\n          });\n          i++;\n        }\n      } else if (this.state.board[nextRow][nextLeft] === null) {\n        moves.push({\n          row: nextRow,\n          col: nextLeft\n        });\n      }\n    }\n\n    adjacent = this.state.board[row][right];\n\n    if (adjacent != null && this.checkers[adjacent].player !== checker.player) {\n      if (checker.isKing && nextRow - row === -1) {\n        let i = 0;\n\n        while (nextRow - i >= 0 && nextRight + i < this.state.board.length && this.state.board[nextRow - i][nextRight + i] === null) {\n          moves.push({\n            row: nextRow - i,\n            col: nextRight + i\n          });\n          i++;\n        }\n      } else if (checker.isKing && nextRow - row === 1) {\n        let i = 0;\n\n        while (nextRow + i < this.state.board.length && nextRight + i < this.state.board.length && this.state.board[nextRow + i][nextRight + i] === null) {\n          moves.push({\n            row: nextRow + i,\n            col: nextRight + i\n          });\n          i++;\n        }\n      } else if (this.state.board[nextRow][nextRight] === null) {\n        moves.push({\n          row: nextRow,\n          col: nextRight\n        });\n      }\n    }\n\n    return moves;\n  }\n\n  moveChecker(checker, row, col) {\n    let c = this.state.checkers[checker];\n    let cRow = c.row;\n    let cCol = c.col;\n\n    if (this.isJumpMove(checker, row)) {\n      let midRow = (cRow + row) / 2;\n      let midCol = (cCol + col) / 2;\n      let removedPlayer = this.state.board[midRow][midCol];\n      this.setState({\n        board: this.getBoard()[midRow][midCol] = null\n      }); //this.board[midRow][midCol] = null;\n\n      this.setState({\n        checkers: this.getCheckers()[removedPlayer].removed = true\n      }); //this.checkers[removedPlayer].removed = true;\n    } //changes from here\n    else if (this.isKingJump(checker, row, col)) {\n        if (this.checkers[checker].row - row >= 2) {\n          //this.checkers[checker].row-1\n          if (this.checkers[checker].col - col >= 2) {\n            //this.checkers[checker].col-1\n            let removedPlayer = this.board[this.checkers[checker].row - 1][this.checkers[checker].col - 1];\n            this.board[this.checkers[checker].row - 1][this.checkers[checker].col - 1] = null;\n            console.log(\"☝ deleted square1:\", this.checkers[checker].row - 1, this.checkers[checker].col - 1);\n            this.checkers[removedPlayer].removed = true;\n          } else {\n            //this.checkers[checker].col+1\n            let removedPlayer = this.board[this.checkers[checker].row - 1][this.checkers[checker].col + 1];\n            this.board[this.checkers[checker].row - 1][this.checkers[checker].col + 1] = null;\n            console.log(\"☝ deleted square2:\", this.checkers[checker].row - 1, this.checkers[checker].col + 1);\n            this.checkers[removedPlayer].removed = true;\n          }\n        } else {\n          //this.checkers[checker].row+1\n          if (this.checkers[checker].col - col >= 2) {\n            //this.checkers[checker].col-1\n            let removedPlayer = this.board[this.checkers[checker].row + 1][this.checkers[checker].col - 1];\n            this.board[this.checkers[checker].row + 1][this.checkers[checker].col - 1] = null;\n            console.log(\"☝ deleted square3:\", this.checkers[checker].row + 1, this.checkers[checker].col - 1);\n            this.checkers[removedPlayer].removed = true;\n          } else {\n            //this.checkers[checker].col+1\n            let removedPlayer = this.board[this.checkers[checker].row + 1][this.checkers[checker].col + 1];\n            this.board[this.checkers[checker].row + 1][this.checkers[checker].col + 1] = null;\n            console.log(\"☝ deleted square4:\", this.checkers[checker].row + 1, this.checkers[checker].col + 1);\n            this.checkers[removedPlayer].removed = true;\n          }\n        }\n      } //to here\n\n\n    c.row = row;\n    c.col = col;\n    this.board[cRow][cCol] = null;\n    this.board[row][col] = checker;\n  }\n\n  render() {\n    let playerColor = this.state.turn === 1 ? \"turn-player1\" : \"turn-player2\";\n    let game = React.createElement(\"div\", {\n      id: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"turn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Turn: \", React.createElement(\"span\", {\n      className: playerColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, this.state.turn === 1 ? \"Player 1\" : \"Player 2\")), React.createElement(Board, {\n      board: this.state.board,\n      checkers: this.state.checkers,\n      selectSquare: this.selectSquare.bind(this),\n      selectedSquare: this.state.selectedSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }));\n    let welcome = React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Welcome To Checkers Game!\"), React.createElement(\"ul\", {\n      id: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.changeWelcome.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"play\")))));\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, this.state.welcome ? welcome : game);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/App.jsx"],"names":["React","Component","Board","PLAYER_ONE","PLAYER_TWO","App","constructor","state","board","getBoard","checkers","getCheckers","turn","selectedSquare","winner","welcome","player","isKing","row","col","removed","changeWelcome","setState","setSquare","selectSquare","isChecker","console","log","handleMove","destRow","destCol","selected","checker","column","canMoveChecker","isJump","isJumpMove","isKingJump","becameKing","moveChecker","getPlayer","length","makeKing","canKeepJumping","nextPlayer","animation","canSelectSquare","square","restart","hasMoves","moves","getAllMoves","jumps","singles","playerMoves","checkerMoves","getMoves","playerJumps","checkerJumps","movesToCheck","move","forEach","i","cMoves","concat","c","topRow","bottomRow","leftCol","rightCol","checkJumps","checkAdjacent","left","right","push","nextRow","nextLeft","nextRight","adjacent","cRow","cCol","midRow","midCol","removedPlayer","render","playerColor","game","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Logic from \"./Logic\";\r\nimport Board from \"./Board\";\r\n\r\nconst PLAYER_ONE = 1;\r\nconst PLAYER_TWO = 2;\r\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { board: this.getBoard(),\r\n                       checkers: this.getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null,\r\n                       welcome: true};\r\n    \r\n    }\r\n\r\n    getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n\r\n    getCheckers(){\r\n        let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                        {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n            ]\r\n            return checkers;\r\n    }\r\n\r\n    changeWelcome(){\r\n        this.setState({welcome: false});\r\n    }\r\n\r\n    setSquare(row,col){\r\n        this.setState({selectedSquare: {row: row, col: col}});\r\n    }\r\n\r\n    selectSquare(row,col){\r\n        let isChecker = this.state.board[row][col];\r\n        let player = isChecker && this.state.checkers[isChecker].player;\r\n        if(!this.state.selectedSquare && isChecker && player === this.state.turn){\r\n            this.setSquare(row,col);\r\n            console.log(\"🚪This is resource square of current player\", row, col);\r\n        }\r\n        else if(this.state.selectedSquare){\r\n            console.log(\"🚩This is destination square of current player\", row, col);\r\n            this.handleMove(row,col);\r\n        }\r\n        else{\r\n            console.log(\"🚫This square is OR null OR not of current player\", row, col);\r\n        }\r\n    }\r\n\r\n    handleMove(destRow,destCol){\r\n        console.log(\"handling move...\");\r\n        let board = this.state.board;\r\n        let selected = this.state.selectedSquare;\r\n        let checker = board[selected.row][selected.column];\r\n        if (!this.canMoveChecker(checker, destRow, destCol)) {\r\n          console.log(\"❌illegal move❌\");\r\n          return;\r\n        }\r\n        //board.makeAnimate(checker,destRow,destCol);\r\n        let isJump = this.isJumpMove(checker, destRow, destCol);\r\n        let isKingJump = this.isKingJump(checker, destRow, destCol);\r\n        let becameKing = false;\r\n        this.moveChecker(checker, destRow, destCol);\r\n        if ((!this.isKing(checker) && (this.getPlayer(checker) === PLAYER_ONE && destRow === 0)) || \r\n        (this.getPlayer(checker) === PLAYER_TWO && destRow === ((board.length)-1))) {\r\n          console.log(\"making King....\");\r\n          becameKing = true;\r\n          this.makeKing(checker);\r\n        }\r\n        if(!becameKing && isKingJump && this.canKeepJumping(checker)){\r\n          this.setState({board: board, selectedSquare: {row: destRow, column: destCol}});\r\n        }\r\n        else if (!becameKing && isJump && this.canKeepJumping(checker)) {\r\n          this.setState({board: board, selectedSquare: {row: destRow, column: destCol}});\r\n        } else {\r\n          this.setState({board: board, turn: this.nextPlayer(), selectedSquare: null, animation: true});\r\n        }\r\n    }\r\n\r\n    canSelectSquare(row, column) {\r\n        let square = this.state.board[row][column];\r\n        if (!square && square !== 0) {\r\n          return false;\r\n        }\r\n        let player = this.state.checkers[square].player;\r\n        return player === this.state.turn;\r\n    }\r\n    \r\n    nextPlayer() {\r\n        return (this.state.turn === PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE)\r\n    }\r\n    \r\n    restart() {\r\n        this.setState({ board: this.getBoard(), \r\n                      turn: PLAYER_ONE, selectedSquare: null, winner: null });\r\n    }\r\n\r\n    hasMoves(player) {\r\n        let moves = this.getAllMoves(player);\r\n        return moves.jumps.length + moves.singles.length > 0;\r\n    }\r\n\r\n    canMoveChecker(checker, row, col) {\r\n        let player = this.state.checkers[checker].player;\r\n        let playerMoves = this.getAllMoves(player);\r\n        let checkerMoves = this.getMoves(checker);\r\n        let playerJumps = playerMoves.jumps;\r\n        let checkerJumps = checkerMoves.jumps;\r\n        if (playerJumps.length && !checkerJumps.length) {\r\n            checkerMoves = {\r\n                singles: [],\r\n                jumps: []\r\n            };\r\n        }\r\n        let moves = checkerMoves;\r\n        let movesToCheck = moves.jumps.length ? moves.jumps : moves.singles;\r\n        for (let move of movesToCheck) {\r\n            if (move.row === row && move.col === col) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n\r\n    getAllMoves(player) {\r\n        let moves = {\r\n            jumps: [],\r\n            singles: []\r\n        };\r\n        let checkers = this.state.checkers;\r\n        checkers.forEach((checker, i) => {\r\n            if (checker.player === player && !checker.removed) {\r\n                let cMoves = this.getMoves(i);\r\n                moves.jumps = (moves.jumps).concat(cMoves.jumps);\r\n                moves.singles = (moves.singles).concat(cMoves.singles);\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n\r\n    canKeepJumping(checker) {\r\n        let moves = this.getMoves(checker).jumps;\r\n        if (moves.length) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMoves(checker) {\r\n        let singles = [];\r\n        let jumps = [];\r\n        let c = this.state.checkers[checker];\r\n        let topRow = c.row - 1;\r\n        let bottomRow = c.row + 1;\r\n        let leftCol = c.col - 1;\r\n        let rightCol = c.col + 1;\r\n        if (c.player === this.state.PLAYER_ONE || c.isKing) {\r\n            jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\r\n            if (!jumps.length) {\r\n                singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\r\n            }\r\n        }\r\n        if (c.player === this.state.PLAYER_TWO || c.isKing) {\r\n            jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c));\r\n            if (!jumps.length) {\r\n                singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\r\n            }\r\n        }\r\n        return {\r\n            singles: singles,\r\n            jumps: jumps\r\n        };\r\n    }\r\n\r\n    checkAdjacent(row, left, right, checker) {\r\n        let moves = [];\r\n        if (row >= this.state.board.length || row < 0) {\r\n            return moves;\r\n        }\r\n        if(checker.isKing  && checker.row-row > 0){\r\n            let i=0;\r\n            while(row-i >= 0 && left-i >= 0 && this.state.board[row-i][left-i] === null){\r\n                moves.push({\r\n                    row: row-i,\r\n                    col: left-i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if(checker.isKing  && checker.row-row < 0){\r\n            let i=0;\r\n            while(row+i < this.state.board.length && left-i >= 0 && this.state.board[row+i][left-i] === null){\r\n                moves.push({\r\n                    row: row+i,\r\n                    col: left-i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if (this.state.board[row][left] === null) {\r\n            moves.push({\r\n                row: row,\r\n                col: left\r\n            });\r\n        }\r\n        if(checker.isKing  && checker.row-row > 0){\r\n            let i=0;\r\n            while(row-i >= 0 && right+i < this.state.board.length && this.state.board[row-i][right+i] === null){\r\n                moves.push({\r\n                    row: row-i,\r\n                    col: right+i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if(checker.isKing  && checker.row-row < 0){\r\n            let i=0;\r\n            while(row+i < this.state.board.length && right+i < this.state.board.length && this.state.board[row+i][right+i] === null){\r\n                moves.push({\r\n                    row: row+i,\r\n                    col: right+i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if (this.state.board[row][right] === null) {\r\n            moves.push({\r\n                row: row,\r\n                col: right\r\n            });\r\n        }\r\n        return moves;\r\n    }\r\n\r\n    checkJumps(row, nextRow, left, right, nextLeft, nextRight, checker) {\r\n        let moves = [];\r\n        if (row >= this.state.board.length || row < 0 || nextRow >= this.state.board.length || nextRow < 0) {\r\n            return moves;\r\n        }\r\n        let adjacent = this.state.board[row][left];\r\n        if (adjacent != null && this.checkers[adjacent].player !== checker.player) {\r\n            if(checker.isKing  && nextRow-row === -1){\r\n                let i=0;\r\n                while(nextRow-i >= 0 && nextLeft-i >= 0 && this.state.board[nextRow-i][nextLeft-i] === null){\r\n                    moves.push({\r\n                        row: nextRow-i,\r\n                        col: nextLeft-i\r\n                    });\r\n                    i++;\r\n                }\r\n            }\r\n            else if(checker.isKing  && nextRow-row === 1){\r\n                let i=0;\r\n                while(nextRow+i < this.state.board.length && nextLeft-i >= 0 && this.state.board[nextRow+i][nextLeft-i] === null){\r\n                    moves.push({\r\n                        row: nextRow+i,\r\n                        col: nextLeft-i\r\n                    });\r\n                    i++;\r\n                }\r\n            }\r\n            else if (this.state.board[nextRow][nextLeft] === null) {\r\n                moves.push({\r\n                    row: nextRow,\r\n                    col: nextLeft\r\n                });\r\n            }\r\n        }\r\n        adjacent = this.state.board[row][right];\r\n        if (adjacent != null && this.checkers[adjacent].player !== checker.player) {\r\n            if(checker.isKing  && nextRow-row === -1){\r\n                let i=0;\r\n                while(nextRow-i >= 0 && nextRight+i < this.state.board.length && this.state.board[nextRow-i][nextRight+i] === null){\r\n                    moves.push({\r\n                        row: nextRow-i,\r\n                        col: nextRight+i\r\n                    });\r\n                    i++;\r\n                }\r\n            }\r\n            else if(checker.isKing  && nextRow-row === 1){\r\n                let i=0;\r\n                while(nextRow+i < this.state.board.length && nextRight+i < this.state.board.length && this.state.board[nextRow+i][nextRight+i] === null){\r\n                    moves.push({\r\n                        row: nextRow+i,\r\n                        col: nextRight+i\r\n                    });\r\n                    i++;\r\n                }\r\n            }\r\n            else if (this.state.board[nextRow][nextRight] === null) {\r\n                moves.push({\r\n                    row: nextRow,\r\n                    col: nextRight\r\n                });\r\n            }\r\n        }\r\n        return moves;\r\n    }\r\n\r\n    moveChecker(checker, row, col) {\r\n        let c = this.state.checkers[checker];\r\n        let cRow = c.row;\r\n        let cCol = c.col;\r\n        if (this.isJumpMove(checker, row)) {\r\n            let midRow = (cRow + row) / 2;\r\n            let midCol = (cCol + col) / 2;\r\n            let removedPlayer = this.state.board[midRow][midCol];\r\n            this.setState({board: this.getBoard()[midRow][midCol] = null});\r\n            //this.board[midRow][midCol] = null;\r\n            this.setState({checkers: this.getCheckers()[removedPlayer].removed = true});\r\n            //this.checkers[removedPlayer].removed = true;\r\n        }\r\n        //changes from here\r\n        else if(this.isKingJump(checker, row, col)){\r\n            if(this.checkers[checker].row - row >= 2){//this.checkers[checker].row-1\r\n                if(this.checkers[checker].col - col >= 2){//this.checkers[checker].col-1\r\n                    let removedPlayer = this.board[this.checkers[checker].row-1][this.checkers[checker].col-1];\r\n                    this.board[this.checkers[checker].row-1][this.checkers[checker].col-1] = null;\r\n                    console.log(\"☝ deleted square1:\",this.checkers[checker].row-1,this.checkers[checker].col-1);\r\n                    this.checkers[removedPlayer].removed = true;\r\n                }\r\n                else{//this.checkers[checker].col+1\r\n                    let removedPlayer = this.board[this.checkers[checker].row-1][this.checkers[checker].col+1];\r\n                    this.board[this.checkers[checker].row-1][this.checkers[checker].col+1] = null;\r\n                    console.log(\"☝ deleted square2:\",this.checkers[checker].row-1,this.checkers[checker].col+1);\r\n                    this.checkers[removedPlayer].removed = true;\r\n                }\r\n            }\r\n            else{//this.checkers[checker].row+1\r\n                if(this.checkers[checker].col - col >= 2){//this.checkers[checker].col-1\r\n                    let removedPlayer = this.board[this.checkers[checker].row+1][this.checkers[checker].col-1];\r\n                    this.board[this.checkers[checker].row+1][this.checkers[checker].col-1] = null;\r\n                    console.log(\"☝ deleted square3:\",this.checkers[checker].row+1,this.checkers[checker].col-1);\r\n                    this.checkers[removedPlayer].removed = true;\r\n                }\r\n                else{//this.checkers[checker].col+1\r\n                    let removedPlayer = this.board[this.checkers[checker].row+1][this.checkers[checker].col+1];\r\n                    this.board[this.checkers[checker].row+1][this.checkers[checker].col+1] = null;\r\n                    console.log(\"☝ deleted square4:\",this.checkers[checker].row+1,this.checkers[checker].col+1);\r\n                    this.checkers[removedPlayer].removed = true;\r\n                }\r\n            }\r\n        }\r\n        //to here\r\n        c.row = row;\r\n        c.col = col;\r\n        this.board[cRow][cCol] = null;\r\n        this.board[row][col] = checker;\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render(){\r\n       let playerColor = this.state.turn===1 ? \"turn-player1\" : \"turn-player2\";\r\n       let game = ( <div id=\"game\">\r\n                        <h1 id=\"turn\">Turn: <span className={playerColor}>{this.state.turn===1 ? \"Player 1\" : \"Player 2\"}</span></h1>\r\n                        <Board \r\n                        board={this.state.board} \r\n                        checkers={this.state.checkers} \r\n                        selectSquare={this.selectSquare.bind(this)}\r\n                        selectedSquare={this.state.selectedSquare}/>\r\n                    </div>);\r\n\r\n        let welcome = ( <div className=\"welcome\">\r\n                            <div className=\"container\">\r\n                                <h1 id=\"logo\">Welcome To Checkers Game!</h1>\r\n                                <ul id=\"menu\"><li onClick={this.changeWelcome.bind(this)}><span>play</span></li></ul>\r\n                            </div>\r\n                        </div>);\r\n       \r\n    \r\n        return(\r\n            <div className=\"wrapper\">\r\n                {/* <h1>Welcome to checkers game!</h1>\r\n                <Board \r\n                board={this.state.board} \r\n                checkers={this.state.checkers} \r\n                selectSquare={this.selectSquare.bind(this)}\r\n                selectedSquare={this.state.selectedSquare}/> */}\r\n                {this.state.welcome ? welcome : game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}