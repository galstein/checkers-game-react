{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; //import Logic from \"./Logic\";\n\nimport Board from \"./Board\";\nconst PLAYER_ONE = 1; //const PLAYER_TWO = 2;\n\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: this.getBoard(),\n      checkers: this.getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null,\n      welcome: true\n    };\n  }\n\n  getBoard() {\n    let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n    return board;\n  }\n\n  getCheckers() {\n    let checkers = [{\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 6,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 1,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 3,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 5,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 7,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 7,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 0,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 2,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 4,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 7,\n      removed: false\n    }];\n    return checkers;\n  }\n\n  setSquare(row, col) {\n    this.setState({\n      selectedSquare: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  selectSquare(row, col) {\n    //let logicState = this.state.logic.state;\n    let isChecker = this.state.board[row][col];\n    let player = isChecker && this.state.checkers[isChecker].player;\n\n    if (!this.state.selectedSquare && isChecker && player === this.state.turn) {\n      this.setSquare(row, col);\n      console.log(\"üö™This is resource square of current player\", row, col);\n    } else if (this.state.selectedSquare) {\n      console.log(\"üö©This is destination square of current player\", row, col);\n      this.handleMove(row, col);\n    } else {\n      console.log(\"üö´This square is OR null OR not of current player\", row, col);\n    }\n  }\n\n  handleMove(destRow, destCol) {\n    //let checker = this.state.board[this.state.selectedSquare.row][this.state.selectedSquare.col];\n    //if(this.canMoveChecker(checker,row,col)){\n    let isEmpty = this.state.board[destRow][destCol] ? false : true;\n    let currentRow = this.state.selectedSquare.row;\n    let currentCol = this.state.selectedSquare.col;\n    let optionOfPlayer1 = this.state.turn === 1 && destRow === currentRow - 1 && (destCol === currentCol - 1 || destCol === currentCol + 1);\n    let optionOfPlayer2 = this.state.turn === 2 && destRow === currentRow + 1 && (destCol === currentCol - 1 || destCol === currentCol + 1);\n\n    if ((optionOfPlayer1 || optionOfPlayer2) && isEmpty) {\n      console.log(\"üòÅCan move checker!!!\");\n    } else {\n      console.log(\"üò≠Can't move checker\");\n    }\n  }\n\n  changeWelcome() {\n    this.setState({\n      welcome: false\n    });\n  }\n\n  render() {\n    //console.log(this.y);\n    //console.log(this.state.logic.selectSquare);\n    //let logicInfo = this.state.logic;\n    //console.log(this.state.selectedSquare);\n    let game = React.createElement(\"div\", {\n      id: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"turn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Turn: \", this.state.turn === 1 ? \"Player 1\" : \"Player 2\"), React.createElement(Board, {\n      board: this.state.board,\n      checkers: this.state.checkers,\n      selectSquare: this.selectSquare.bind(this),\n      selectedSquare: this.state.selectedSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n    let welcome = React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Welcome To Checkers Game!\"), React.createElement(\"ul\", {\n      id: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.changeWelcome.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"play\")))));\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.welcome ? welcome : game);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/App.jsx"],"names":["React","Component","Board","PLAYER_ONE","App","constructor","state","board","getBoard","checkers","getCheckers","turn","selectedSquare","winner","welcome","player","isKing","row","col","removed","setSquare","setState","selectSquare","isChecker","console","log","handleMove","destRow","destCol","isEmpty","currentRow","currentCol","optionOfPlayer1","optionOfPlayer2","changeWelcome","render","game","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Logic from \"./Logic\";\r\nimport Board from \"./Board\";\r\n\r\nconst PLAYER_ONE = 1;\r\n//const PLAYER_TWO = 2;\r\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { board: this.getBoard(),\r\n                       checkers: this.getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null,\r\n                       welcome: true};\r\n    \r\n      }\r\n\r\n      getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n\r\n    getCheckers(){\r\n        let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                        {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n            ]\r\n            return checkers;\r\n        }\r\n\r\n      setSquare(row,col){\r\n          this.setState({selectedSquare: {row: row, col: col}});\r\n      }\r\n\r\n      selectSquare(row,col){\r\n        //let logicState = this.state.logic.state;\r\n        let isChecker = this.state.board[row][col];\r\n        let player = isChecker && this.state.checkers[isChecker].player;\r\n        if(!this.state.selectedSquare && isChecker && player === this.state.turn){\r\n            this.setSquare(row,col);\r\n            console.log(\"üö™This is resource square of current player\", row, col);\r\n        }\r\n        else if(this.state.selectedSquare){\r\n            console.log(\"üö©This is destination square of current player\", row, col);\r\n            this.handleMove(row,col);\r\n        }\r\n        else{\r\n            console.log(\"üö´This square is OR null OR not of current player\", row, col);\r\n        }\r\n    }\r\n\r\n    handleMove(destRow,destCol){\r\n        //let checker = this.state.board[this.state.selectedSquare.row][this.state.selectedSquare.col];\r\n        //if(this.canMoveChecker(checker,row,col)){\r\n        let isEmpty = this.state.board[destRow][destCol] ? false : true;\r\n        let currentRow = this.state.selectedSquare.row;\r\n        let currentCol = this.state.selectedSquare.col;\r\n        let optionOfPlayer1 = this.state.turn ===1 && destRow === currentRow-1 && (destCol === currentCol-1 || destCol === currentCol+1);\r\n        let optionOfPlayer2 = this.state.turn ===2 && destRow === currentRow+1 && (destCol === currentCol-1 || destCol === currentCol+1);\r\n        if((optionOfPlayer1 || optionOfPlayer2) && isEmpty){\r\n            console.log(\"üòÅCan move checker!!!\");\r\n        }\r\n        else{\r\n            console.log(\"üò≠Can't move checker\");\r\n        }\r\n    }\r\n\r\n    changeWelcome(){\r\n        this.setState({welcome: false});\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render(){\r\n       //console.log(this.y);\r\n       //console.log(this.state.logic.selectSquare);\r\n       //let logicInfo = this.state.logic;\r\n       //console.log(this.state.selectedSquare);\r\n       let game = ( <div id=\"game\">\r\n                        <h1 id=\"turn\">Turn: {this.state.turn===1 ? \"Player 1\" : \"Player 2\"}</h1>\r\n                        <Board \r\n                        board={this.state.board} \r\n                        checkers={this.state.checkers} \r\n                        selectSquare={this.selectSquare.bind(this)}\r\n                        selectedSquare={this.state.selectedSquare}/>\r\n                    </div>);\r\n\r\n        let welcome = ( <div className=\"welcome\">\r\n                            <div className=\"container\">\r\n                                <h1 id=\"logo\">Welcome To Checkers Game!</h1>\r\n                                <ul id=\"menu\"><li onClick={this.changeWelcome.bind(this)}><span>play</span></li></ul>\r\n                            </div>\r\n                        </div>);\r\n       \r\n    \r\n        return(\r\n            <div className=\"wrapper\">\r\n                {/* <h1>Welcome to checkers game!</h1>\r\n                <Board \r\n                board={this.state.board} \r\n                checkers={this.state.checkers} \r\n                selectSquare={this.selectSquare.bind(this)}\r\n                selectedSquare={this.state.selectedSquare}/> */}\r\n                {this.state.welcome ? welcome : game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}