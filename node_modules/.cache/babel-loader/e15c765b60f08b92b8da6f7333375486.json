{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Logic extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: this.getBoard(),\n      checkers: getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      functions: this,\n      winner: null\n    };\n  }\n\n  getBoard() {\n    let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n    return board;\n  }\n\n  selectSquare(row, col) {\n    if (!this.isChecker) {\n      console.log(\"illegal move\");\n    } else {\n      this.selectedSquare = {\n        row: row,\n        col: col\n      };\n      console.log(\"you choose square:\", row, col, this.selectedSquare);\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nlet checkers = getCheckers();\nconsole.log(\"checkers is\", checkers);\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\nconst PLAYERS = {\n  [PLAYER_ONE]: {\n    name: \"Player One\",\n    class: \"player-one\"\n  },\n  [PLAYER_TWO]: {\n    name: \"Player Two\",\n    class: \"player-two\"\n  }\n};\n\nfunction getCheckers() {\n  let checkers = [{\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 0,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 2,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 4,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 6,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 1,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 3,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 5,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 7,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 0,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 2,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 4,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 6,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 1,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 3,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 5,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 7,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 0,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 2,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 4,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 6,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 1,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 3,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 5,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 7,\n    removed: false\n  }];\n  return checkers;\n}\n/*  \r\nLogic.prototype.selectSquare = function(row,col){\r\n       if(!this.isChecker){\r\n           console.log(\"illegal move\");\r\n       }\r\n       else{\r\n           this.selectedSquare = {row: row, col: col};\r\n           console.log(\"you choose square:\", row,col,this.selectedSquare);\r\n       }\r\n   }\r\n*/\n\n\nexport default Logic;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/Logic.jsx"],"names":["React","Component","Logic","constructor","state","board","getBoard","checkers","getCheckers","turn","PLAYER_ONE","selectedSquare","functions","winner","selectSquare","row","col","isChecker","console","log","render","PLAYER_TWO","PLAYERS","name","class","player","isKing","removed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Logic extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = { board: this.getBoard(),\r\n                       checkers: getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null,\r\n                       functions: this, \r\n                       winner: null,}\r\n    }\r\n\r\n    getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n   \r\n\r\n    selectSquare(row,col){\r\n        if(!this.isChecker){\r\n            console.log(\"illegal move\");\r\n        }\r\n        else{\r\n            this.selectedSquare = {row: row, col: col};\r\n            console.log(\"you choose square:\", row,col,this.selectedSquare);\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(null);\r\n\r\n    }\r\n}\r\n\r\nlet checkers = getCheckers();\r\nconsole.log(\"checkers is\",checkers);\r\nconst PLAYER_ONE = 1;\r\nconst PLAYER_TWO = 2;\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n   \r\n\r\n    function getCheckers(){\r\n    let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                    {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                    {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                    {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n        ]\r\n        return checkers;\r\n    }\r\n\r\n\r\n       \r\n  \r\n     /*  \r\n    Logic.prototype.selectSquare = function(row,col){\r\n            if(!this.isChecker){\r\n                console.log(\"illegal move\");\r\n            }\r\n            else{\r\n                this.selectedSquare = {row: row, col: col};\r\n                console.log(\"you choose square:\", row,col,this.selectedSquare);\r\n            }\r\n        }\r\n*/\r\n   \r\nexport default Logic;"]},"metadata":{},"sourceType":"module"}