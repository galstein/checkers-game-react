{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\Game.jsx\";\nimport React, { Component } from 'react';\nimport Logic from \"./Logic\";\nimport Board from \"./Board\";\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\nconst PLAYERS = {\n  [PLAYER_ONE]: {\n    name: \"Player One\",\n    class: \"player-one\"\n  },\n  [PLAYER_TWO]: {\n    name: \"Player Two\",\n    class: \"player-two\"\n  }\n};\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      logic: new Logic(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null\n    };\n  }\n\n  setSquare(row, col) {\n    this.setState({\n      selectedSquare: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  selectSquare(row, col) {\n    //console.log(\"this\" ,this, \"board\",this.state.logic.state.board);\n    let logicState = this.state.logic.state;\n    let isChecker = logicState.board[row][col];\n    let player = isChecker && logicState.checkers[isChecker].player;\n\n    if (!this.state.selectedSquare && isChecker && player === this.state.turn) {\n      this.setSquare(row, col);\n      console.log(\"ðŸšªThis is resource square of current player\", row, col);\n    } else if (this.state.selectedSquare) {\n      console.log(\"ðŸš©This is destination square of current player\", row, col);\n      this.handleMove(row, col);\n    } else {\n      console.log(\"ðŸš«This square is OR null OR not of current player\");\n    }\n  }\n\n  handleMove(row, col) {\n    console.log(\"this is where you want to move:\", row, col);\n    console.log(\"from square:\", this.state.selectedSquare);\n  }\n\n  render() {\n    //console.log(this.y);\n    //console.log(this.state.logic.selectSquare);\n    let logicInfo = this.state.logic;\n    console.log(this.state.selectedSquare);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Welcome to checkers game!\"), React.createElement(Board, {\n      board: logicInfo.state.board,\n      checkers: logicInfo.state.checkers,\n      selectSquare: this.selectSquare,\n      selectedSquare: this.selectedSquare.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/Game.jsx"],"names":["React","Component","Logic","Board","PLAYER_ONE","PLAYER_TWO","PLAYERS","name","class","Game","constructor","state","logic","turn","selectedSquare","winner","setSquare","row","col","setState","selectSquare","logicState","isChecker","board","player","checkers","console","log","handleMove","render","logicInfo","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Logic from \"./Logic\";\r\nimport Board from \"./Board\";\r\n\r\nconst PLAYER_ONE = 1;\r\nconst PLAYER_TWO = 2;\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n\r\nclass Game extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { logic: new Logic(),\r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null};\r\n    \r\n      }\r\n\r\n      setSquare(row,col){\r\n          this.setState({selectedSquare: {row: row, col: col}});\r\n      }\r\n\r\n      selectSquare(row,col){\r\n        //console.log(\"this\" ,this, \"board\",this.state.logic.state.board);\r\n        let logicState = this.state.logic.state;\r\n        let isChecker = logicState.board[row][col];\r\n        let player = isChecker && logicState.checkers[isChecker].player;\r\n        if(!this.state.selectedSquare && isChecker && player === this.state.turn){\r\n            this.setSquare(row,col);\r\n            console.log(\"ðŸšªThis is resource square of current player\", row,col);\r\n        }\r\n        else if(this.state.selectedSquare){\r\n            console.log(\"ðŸš©This is destination square of current player\", row,col);\r\n            this.handleMove(row,col);\r\n        }\r\n        else{\r\n            console.log(\"ðŸš«This square is OR null OR not of current player\");\r\n        }\r\n    }\r\n\r\n    handleMove(row,col){\r\n\r\n        console.log(\"this is where you want to move:\",row,col);\r\n        console.log(\"from square:\",this.state.selectedSquare);\r\n        \r\n\r\n\r\n    }\r\n    \r\n    \r\n    render(){\r\n       //console.log(this.y);\r\n       //console.log(this.state.logic.selectSquare);\r\n       let logicInfo = this.state.logic;\r\n       console.log(this.state.selectedSquare);\r\n       \r\n       \r\n    \r\n        return(\r\n            <div>\r\n                <h1>Welcome to checkers game!</h1>\r\n                <Board \r\n                board={logicInfo.state.board} \r\n                checkers={logicInfo.state.checkers} \r\n                selectSquare={this.selectSquare}\r\n                selectedSquare={this.selectedSquare.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}