{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\n/*\r\nimport { Checkerboard } from 'react-checkers';\r\nfunction App(){\r\n    return(\r\n        <Checkerboard />\r\n    );\r\n}\r\nexport default App;\r\n*/\n\nimport { useCheckers } from 'react-checkers';\n\nfunction App() {\n  const _useCheckers = useCheckers(),\n        board = _useCheckers.board,\n        handleMove = _useCheckers.handleMove,\n        handlePick = _useCheckers.handlePick,\n        playerTurn = _useCheckers.playerTurn,\n        scoreboard = _useCheckers.scoreboard,\n        rules = _useCheckers.rules;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"turn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"`Turn: $\", playerTurn, \"`\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Score:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, `Player 1: ${scoreboard[1]} | Player 2: ${scoreboard[2]}`)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, Object.keys(board).map((row, j) => {\n    return React.createElement(\"div\", {\n      key: j,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, Object.keys(board[row]).map((positionIndex, k) => {\n      const square = board[row][positionIndex];\n      const isEvenPosition = (square.position.x + 1 * square.position.y) % 2 === 0;\n      return React.createElement(\"div\", {\n        onClick: () => !square.occupiedBy ? handleMove(square) : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, square.occupiedBy !== null && isEvenPosition && React.createElement(\"div\", {\n        onClick: () => handlePick(square),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, square.isKinged && 'K'));\n    }));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Rules:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, rules.map((rule, i) => React.createElement(\"div\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, i + 1, \". \", rule)))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/App.jsx"],"names":["React","useCheckers","App","board","handleMove","handlePick","playerTurn","scoreboard","rules","Object","keys","map","row","j","positionIndex","k","square","isEvenPosition","position","x","y","occupiedBy","isKinged","rule","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;;;;;;;;AASA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,SAASC,GAAT,GAAe;AAAA,uBAC4DD,WAAW,EADvE;AAAA,QACLE,KADK,gBACLA,KADK;AAAA,QACEC,UADF,gBACEA,UADF;AAAA,QACcC,UADd,gBACcA,UADd;AAAA,QAC0BC,UAD1B,gBAC0BA,UAD1B;AAAA,QACsCC,UADtC,gBACsCA,UADtC;AAAA,QACkDC,KADlD,gBACkDA,KADlD;;AAGb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+BF,UAA/B,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,aAAYC,UAAU,CAAC,CAAD,CAAI,gBAAeA,UAAU,CAAC,CAAD,CAAI,EAA9D,CAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAClC,WACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACS,GAAD,CAAjB,EAAwBD,GAAxB,CAA4B,CAACG,aAAD,EAAgBC,CAAhB,KAAsB;AACjD,YAAMC,MAAM,GAAGb,KAAK,CAACS,GAAD,CAAL,CAAWE,aAAX,CAAf;AACA,YAAMG,cAAc,GAAG,CAACD,MAAM,CAACE,QAAP,CAAgBC,CAAhB,GAAoB,IAAIH,MAAM,CAACE,QAAP,CAAgBE,CAAzC,IAA8C,CAA9C,KAAoD,CAA3E;AAEA,aACE;AAAK,QAAA,OAAO,EAAE,MAAO,CAACJ,MAAM,CAACK,UAAR,GAAqBjB,UAAU,CAACY,MAAD,CAA/B,GAA0C,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAACK,UAAP,KAAsB,IAAtB,IAA8BJ,cAA9B,IACC;AAAK,QAAA,OAAO,EAAE,MAAMZ,UAAU,CAACW,MAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,CAACM,QAAP,IAAmB,GADtB,CAFJ,CADF;AASD,KAbA,CADH,CADF;AAkBD,GAnBA,CADH,CANF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACG,GAAN,CAAU,CAACY,IAAD,EAAOC,CAAP,KACT;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,GAAG,CADP,QACYD,IADZ,CADD,CADH,CAFF,CA5BF,CADF;AAyCD;;AAED,eAAerB,GAAf","sourcesContent":["import React from \"react\";\r\n/*\r\nimport { Checkerboard } from 'react-checkers';\r\nfunction App(){\r\n    return(\r\n        <Checkerboard />\r\n    );\r\n}\r\nexport default App;\r\n*/\r\nimport { useCheckers } from 'react-checkers';\r\n \r\nfunction App() {\r\n  const { board, handleMove, handlePick, playerTurn, scoreboard, rules } = useCheckers();\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"turn\">`Turn: ${playerTurn}`</div>\r\n      <div>\r\n        <div>Score:</div>\r\n        <div>{`Player 1: ${scoreboard[1]} | Player 2: ${scoreboard[2]}`}</div>\r\n      </div>\r\n      <div>\r\n        {Object.keys(board).map((row, j) => {\r\n          return (\r\n            <div key={j}>\r\n              {Object.keys(board[row]).map((positionIndex, k) => {\r\n                const square = board[row][positionIndex];\r\n                const isEvenPosition = (square.position.x + 1 * square.position.y) % 2 === 0\r\n \r\n                return (\r\n                  <div onClick={() => (!square.occupiedBy ? handleMove(square) : null)}>\r\n                    {square.occupiedBy !== null && isEvenPosition && (\r\n                      <div onClick={() => handlePick(square)}>\r\n                        {square.isKinged && 'K'}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div>\r\n        <div>Rules:</div>\r\n        <div>\r\n          {rules.map((rule, i) => (\r\n            <div key={i}>\r\n              {i + 1}. {rule}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}