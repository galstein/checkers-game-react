{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\Square.jsx\";\nimport React from \"react\";\nimport Checker from \"./Checker\";\n\nfunction Square(props) {\n  let color = (props.row + props.col) % 2 === 0 ? \"square-color1\" : \"square-color2\";\n  let selected = props.isSelected ? \" selected\" : \"\";\n  let classes = \"square \" + color + selected; //props.selectSquare.bind(this,props.row,props.col)\n  //()=>props.selectSquare(props.row,props.col) ------- worked\n\n  return React.createElement(\"div\", {\n    className: classes,\n    onClick: () => props.selectSquare(props.row, props.col, this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.isChecker && React.createElement(Checker, {\n    checker: props.checker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}\n\nexport default Square;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/Square.jsx"],"names":["React","Checker","Square","props","color","row","col","selected","isSelected","classes","selectSquare","isChecker","checker"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAEd,MAAIC,KAAK,GAAG,CAACD,KAAK,CAACE,GAAN,GAAYF,KAAK,CAACG,GAAnB,IAA0B,CAA1B,KAAgC,CAAhC,GAAoC,eAApC,GAAsD,eAAlE;AACA,MAAIC,QAAQ,GAAGJ,KAAK,CAACK,UAAN,GAAmB,WAAnB,GAAiC,EAAhD;AACA,MAAIC,OAAO,GAAG,YAAYL,KAAZ,GAAoBG,QAAlC,CAJc,CAMtB;AACA;;AACQ,SACI;AAAK,IAAA,SAAS,EAAEE,OAAhB;AAAyB,IAAA,OAAO,EAAE,MAAIN,KAAK,CAACO,YAAN,CAAmBP,KAAK,CAACE,GAAzB,EAA6BF,KAAK,CAACG,GAAnC,EAAuC,IAAvC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACQ,SAAN,IAAmB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAER,KAAK,CAACS,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,CADJ;AAKP;;AAED,eAAeV,MAAf","sourcesContent":["import React from \"react\";\r\nimport Checker from \"./Checker\";\r\n\r\nfunction Square(props){\r\n\r\n        let color = (props.row + props.col) % 2 === 0 ? \"square-color1\" : \"square-color2\";\r\n        let selected = props.isSelected ? \" selected\" : \"\";\r\n        let classes = \"square \" + color + selected;\r\n        \r\n//props.selectSquare.bind(this,props.row,props.col)\r\n//()=>props.selectSquare(props.row,props.col) ------- worked\r\n        return (\r\n            <div className={classes} onClick={()=>props.selectSquare(props.row,props.col,this)}>\r\n                {props.isChecker && <Checker checker={props.checker}/>}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Square;"]},"metadata":{},"sourceType":"module"}