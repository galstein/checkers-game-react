{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; //import Logic from \"./Logic\";\n\nimport Board from \"./Board\";\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\nconst PLAYERS = {\n  [PLAYER_ONE]: {\n    name: \"Player One\",\n    class: \"player-one\"\n  },\n  [PLAYER_TWO]: {\n    name: \"Player Two\",\n    class: \"player-two\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: this.getBoard(),\n      checkers: this.getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null\n    };\n  }\n\n  getBoard() {\n    let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n    return board;\n  }\n\n  getCheckers() {\n    let checkers = [{\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 6,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 1,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 3,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 5,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 7,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 7,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 0,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 2,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 4,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 7,\n      removed: false\n    }];\n    return checkers;\n  }\n\n  setSquare(row, col) {\n    this.setState({\n      selectedSquare: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  selectSquare(row, col) {\n    //let logicState = this.state.logic.state;\n    let isChecker = this.state.board[row][col];\n    let player = isChecker && this.state.checkers[isChecker].player;\n\n    if (!this.state.selectedSquare && isChecker && player === this.state.turn) {\n      this.setSquare(row, col);\n      console.log(\"üö™This is resource square of current player\", row, col);\n    } else if (this.state.selectedSquare) {\n      console.log(\"üö©This is destination square of current player\", row, col);\n      this.handleMove(row, col);\n    } else {\n      console.log(\"üö´This square is OR null OR not of current player\", row, col);\n    }\n  }\n\n  handleMove(row, col) {\n    console.log(\"handling move...\");\n    let board = this.state.board;\n    let selected = this.state.selectedSquare;\n    let start = board[selected.row][selected.column];\n    console.log(\"üåèckecker:\", start, \" from square:\", selected, \" wants to move:\", row, col);\n\n    if (!this.canMoveChecker(start, row, col)) {\n      console.log(\"‚ùåillegal move‚ùå\");\n      return;\n    }\n\n    let isJump = board.isJumpMove(start, row, col);\n    let isKingJump = board.isKingJump(start, row, col); //new change\n    //console.log(\"üçûDid the checker eat?\", isJump);\n\n    let becameKing = false;\n    board.moveChecker(start, row, col); //now the board is changed\n\n    if (!board.isKing(start) && board.getPlayer(start) === PLAYER_ONE && row === 0 || board.getPlayer(start) === PLAYER_TWO && row === board.board.length - 1) {\n      console.log(\"making King....\");\n      becameKing = true;\n      board.makeKing(start);\n    } //1\n    //changes from here\n\n\n    if (!becameKing && isKingJump && board.canKeepJumping(start)) {\n      //already king\n      this.setState({\n        board: board,\n        selectedSquare: {\n          row: row,\n          column: col\n        }\n      });\n    } //2\n    //to here\n    else if (!becameKing && isJump && board.canKeepJumping(start)) {\n        this.setState({\n          board: board,\n          selectedSquare: {\n            row: row,\n            column: col\n          }\n        });\n      } else {\n        //3\n        this.setState({\n          board: board,\n          turn: this.nextPlayer(),\n          selectedSquare: null\n        });\n      } //4\n\n  }\n\n  canMoveChecker(checker, row, col) {\n    console.log(\"canMoveChecker arguments\", checker, row, col);\n    let player = this.state.checkers[checker].player;\n    let playerMoves = this.getAllMoves(player);\n    let checkerMoves = this.getMoves(checker);\n    let playerJumps = playerMoves.jumps;\n    let checkerJumps = checkerMoves.jumps;\n\n    if (playerJumps.length && !checkerJumps.length) {\n      checkerMoves = {\n        singles: [],\n        jumps: []\n      };\n    }\n\n    let moves = checkerMoves;\n    let movesToCheck = moves.jumps.length ? moves.jumps : moves.singles;\n\n    for (let move of movesToCheck) {\n      if (move.row === row && move.col === col) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getAllMoves(player) {\n    let moves = {\n      jumps: [],\n      singles: []\n    };\n    let checkers = this.state.checkers;\n    checkers.forEach((checker, i) => {\n      if (checker.player === player && !checker.removed) {\n        let cMoves = this.getMoves(i);\n        moves.jumps = moves.jumps.concat(cMoves.jumps);\n        moves.singles = moves.singles.concat(cMoves.singles);\n      }\n    }); //console.log(\"moves of player \" + player, JSON.stringify(moves));\n\n    return moves;\n  }\n\n  getMoves(checker) {\n    let singles = [];\n    let jumps = [];\n    let c = this.state.checkers[checker]; //console.log(\"◊ó◊ô◊ô◊ú ◊û◊°◊§◊® :\",checker);\n\n    let topRow = c.row - 1;\n    let bottomRow = c.row + 1;\n    let leftCol = c.col - 1;\n    let rightCol = c.col + 1;\n\n    if (c.player === this.playerOne || c.isKing) {\n      //console.log(\"üçÄthis is checker:\",checker,\" the valus to checkJumps:\",topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\n      jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c); //c.player\n\n      if (!jumps.length) {\n        singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\n      }\n    }\n\n    if (c.player === this.playerTwo || c.isKing) {\n      jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c)); //c.player\n\n      if (!jumps.length) {\n        singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\n      }\n    }\n\n    return {\n      singles: singles,\n      jumps: jumps\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Welcome to checkers game!\"), React.createElement(Board, {\n      board: this.state.board,\n      checkers: this.state.checkers,\n      selectSquare: this.selectSquare.bind(this),\n      selectedSquare: this.state.selectedSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/App.jsx"],"names":["React","Component","Board","PLAYER_ONE","PLAYER_TWO","PLAYERS","name","class","App","constructor","state","board","getBoard","checkers","getCheckers","turn","selectedSquare","winner","player","isKing","row","col","removed","setSquare","setState","selectSquare","isChecker","console","log","handleMove","selected","start","column","canMoveChecker","isJump","isJumpMove","isKingJump","becameKing","moveChecker","getPlayer","length","makeKing","canKeepJumping","nextPlayer","checker","playerMoves","getAllMoves","checkerMoves","getMoves","playerJumps","jumps","checkerJumps","singles","moves","movesToCheck","move","forEach","i","cMoves","concat","c","topRow","bottomRow","leftCol","rightCol","playerOne","checkJumps","checkAdjacent","playerTwo","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Logic from \"./Logic\";\r\nimport Board from \"./Board\";\r\n\r\nconst PLAYER_ONE = 1;\r\nconst PLAYER_TWO = 2;\r\n\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { board: this.getBoard(),\r\n                       checkers: this.getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null};\r\n    \r\n      }\r\n\r\n      getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n\r\n    getCheckers(){\r\n        let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                        {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n            ]\r\n            return checkers;\r\n        }\r\n\r\n      setSquare(row,col){\r\n          this.setState({selectedSquare: {row: row, col: col}});\r\n      }\r\n\r\n      selectSquare(row,col){\r\n        //let logicState = this.state.logic.state;\r\n        let isChecker = this.state.board[row][col];\r\n        let player = isChecker && this.state.checkers[isChecker].player;\r\n        if(!this.state.selectedSquare && isChecker && player === this.state.turn){\r\n            this.setSquare(row,col);\r\n            console.log(\"üö™This is resource square of current player\", row, col);\r\n        }\r\n        else if(this.state.selectedSquare){\r\n            console.log(\"üö©This is destination square of current player\", row, col);\r\n            this.handleMove(row,col);\r\n        }\r\n        else{\r\n            console.log(\"üö´This square is OR null OR not of current player\", row, col);\r\n        }\r\n    }\r\n\r\n    handleMove(row, col) {\r\n        console.log(\"handling move...\");\r\n        let board = this.state.board;\r\n        let selected = this.state.selectedSquare;\r\n        let start = board[selected.row][selected.column];\r\n        console.log(\"üåèckecker:\",start,\" from square:\",selected,\" wants to move:\",row,col);\r\n        if (!this.canMoveChecker(start, row, col)) {\r\n          console.log(\"‚ùåillegal move‚ùå\");\r\n          return;\r\n        }\r\n        let isJump = board.isJumpMove(start, row, col);\r\n        let isKingJump = board.isKingJump(start, row, col);//new change\r\n        //console.log(\"üçûDid the checker eat?\", isJump);\r\n        let becameKing = false;\r\n        board.moveChecker(start, row, col);\r\n        //now the board is changed\r\n        if ((!board.isKing(start) && (board.getPlayer(start) === PLAYER_ONE && row === 0)) || \r\n        (board.getPlayer(start) === PLAYER_TWO && row === ((board.board.length)-1))) {\r\n          console.log(\"making King....\");\r\n          becameKing = true;\r\n          board.makeKing(start);\r\n        }//1\r\n        //changes from here\r\n        if(!becameKing && isKingJump && board.canKeepJumping(start)){//already king\r\n          this.setState({board: board, selectedSquare: {row: row, column: col}});\r\n        }//2\r\n        //to here\r\n        else if (!becameKing && isJump && board.canKeepJumping(start)) {\r\n          this.setState({board: board, selectedSquare: {row: row, column: col}});\r\n        } else {//3\r\n          this.setState({board: board, turn: this.nextPlayer(), selectedSquare: null});\r\n        }//4\r\n      }\r\n\r\n    canMoveChecker(checker,row,col){\r\n        console.log(\"canMoveChecker arguments\",checker,row,col);\r\n        \r\n        let player = this.state.checkers[checker].player;\r\n        let playerMoves = this.getAllMoves(player);\r\n        let checkerMoves = this.getMoves(checker);\r\n        let playerJumps = playerMoves.jumps;\r\n        let checkerJumps = checkerMoves.jumps;\r\n        if (playerJumps.length && !checkerJumps.length) {\r\n            checkerMoves = {\r\n                singles: [],\r\n                jumps: []\r\n            };\r\n        }\r\n        let moves = checkerMoves;\r\n        let movesToCheck = moves.jumps.length ? moves.jumps : moves.singles;\r\n        for (let move of movesToCheck) {\r\n            if (move.row === row && move.col === col) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getAllMoves(player) {\r\n        let moves = {\r\n            jumps: [],\r\n            singles: []\r\n        };\r\n        let checkers = this.state.checkers;\r\n        checkers.forEach((checker, i) => {\r\n            if (checker.player === player && !checker.removed) {\r\n                let cMoves = this.getMoves(i);\r\n                moves.jumps = (moves.jumps).concat(cMoves.jumps);\r\n                moves.singles = (moves.singles).concat(cMoves.singles);\r\n            }\r\n        });\r\n        //console.log(\"moves of player \" + player, JSON.stringify(moves));\r\n        return moves;\r\n    }\r\n\r\n    getMoves(checker) {\r\n        let singles = [];\r\n        let jumps = [];\r\n        let c = this.state.checkers[checker];\r\n        //console.log(\"◊ó◊ô◊ô◊ú ◊û◊°◊§◊® :\",checker);\r\n        let topRow = c.row - 1;\r\n        let bottomRow = c.row + 1;\r\n        let leftCol = c.col - 1;\r\n        let rightCol = c.col + 1;\r\n        if (c.player === this.playerOne || c.isKing) {\r\n            //console.log(\"üçÄthis is checker:\",checker,\" the valus to checkJumps:\",topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\r\n            jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);//c.player\r\n            if (!jumps.length) {\r\n                singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\r\n            }\r\n        }\r\n        if (c.player === this.playerTwo || c.isKing) {\r\n            jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c));//c.player\r\n            if (!jumps.length) {\r\n                singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\r\n            }\r\n        }\r\n        return {\r\n            singles: singles,\r\n            jumps: jumps\r\n        };\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render(){\r\n       \r\n        return(\r\n            <div>\r\n                <h1>Welcome to checkers game!</h1>\r\n                <Board \r\n                board={this.state.board} \r\n                checkers={this.state.checkers} \r\n                selectSquare={this.selectSquare.bind(this)}\r\n                selectedSquare={this.state.selectedSquare}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}