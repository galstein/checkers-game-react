{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galst\\\\Desktop\\\\Projects\\\\checkers-react\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; //import Logic from \"./Logic\";\n\nimport Board from \"./Board\";\nconst PLAYER_ONE = 1;\nconst PLAYER_TWO = 2;\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.checkAdjacent = function (row, left, right, checker) {\n      let moves = [];\n\n      if (row >= this.board.length || row < 0) {\n        return moves;\n      }\n\n      if (checker.isKing && checker.row - row > 0) {\n        let i = 0;\n\n        while (row - i >= 0 && left - i >= 0 && this.board[row - i][left - i] === null) {\n          moves.push({\n            row: row - i,\n            col: left - i\n          });\n          i++;\n        }\n      } else if (checker.isKing && checker.row - row < 0) {\n        let i = 0;\n\n        while (row + i < this.board.length && left - i >= 0 && this.board[row + i][left - i] === null) {\n          moves.push({\n            row: row + i,\n            col: left - i\n          });\n          i++;\n        }\n      } else if (this.board[row][left] === null) {\n        moves.push({\n          row: row,\n          col: left\n        });\n      }\n\n      if (checker.isKing && checker.row - row > 0) {\n        let i = 0;\n\n        while (row - i >= 0 && right + i < this.board.length && this.board[row - i][right + i] === null) {\n          moves.push({\n            row: row - i,\n            col: right + i\n          });\n          i++;\n        }\n      } else if (checker.isKing && checker.row - row < 0) {\n        let i = 0;\n\n        while (row + i < this.board.length && right + i < this.board.length && this.board[row + i][right + i] === null) {\n          moves.push({\n            row: row + i,\n            col: right + i\n          });\n          i++;\n        }\n      } else if (this.board[row][right] === null) {\n        moves.push({\n          row: row,\n          col: right\n        });\n      }\n\n      return moves;\n    };\n\n    this.state = {\n      board: this.getBoard(),\n      checkers: this.getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null,\n      welcome: true\n    };\n  }\n\n  getBoard() {\n    let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n    return board;\n  }\n\n  getCheckers() {\n    let checkers = [{\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 7,\n      col: 6,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 1,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 3,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 5,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 6,\n      col: 7,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 0,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 2,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 4,\n      removed: false\n    }, {\n      player: 1,\n      isKing: false,\n      row: 5,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 0,\n      col: 7,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 0,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 2,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 4,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 1,\n      col: 6,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 1,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 3,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 5,\n      removed: false\n    }, {\n      player: 2,\n      isKing: false,\n      row: 2,\n      col: 7,\n      removed: false\n    }];\n    return checkers;\n  }\n\n  changeWelcome() {\n    this.setState({\n      welcome: false\n    });\n  }\n\n  setSquare(row, col) {\n    this.setState({\n      selectedSquare: {\n        row: row,\n        col: col\n      }\n    });\n  }\n\n  selectSquare(row, col) {\n    let isChecker = this.state.board[row][col];\n    let player = isChecker && this.state.checkers[isChecker].player;\n\n    if (!this.state.selectedSquare && isChecker && player === this.state.turn) {\n      this.setSquare(row, col);\n      console.log(\"🚪This is resource square of current player\", row, col);\n    } else if (this.state.selectedSquare) {\n      console.log(\"🚩This is destination square of current player\", row, col);\n      this.handleMove(row, col);\n    } else {\n      console.log(\"🚫This square is OR null OR not of current player\", row, col);\n    }\n  }\n\n  handleMove(destRow, destCol) {\n    console.log(\"handling move...\");\n    let board = this.state.board;\n    let selected = this.state.selectedSquare;\n    let checker = board[selected.row][selected.column];\n\n    if (!this.canMoveChecker(checker, destRow, destCol)) {\n      console.log(\"❌illegal move❌\");\n      return;\n    } //board.makeAnimate(checker,destRow,destCol);\n\n\n    let isJump = this.isJumpMove(checker, destRow, destCol);\n    let isKingJump = this.isKingJump(checker, destRow, destCol);\n    let becameKing = false;\n    this.moveChecker(checker, destRow, destCol);\n\n    if (!this.isKing(checker) && this.getPlayer(checker) === PLAYER_ONE && destRow === 0 || this.getPlayer(checker) === PLAYER_TWO && destRow === board.length - 1) {\n      console.log(\"making King....\");\n      becameKing = true;\n      this.makeKing(checker);\n    }\n\n    if (!becameKing && isKingJump && this.canKeepJumping(checker)) {\n      this.setState({\n        board: board,\n        selectedSquare: {\n          row: destRow,\n          column: destCol\n        }\n      });\n    } else if (!becameKing && isJump && this.canKeepJumping(checker)) {\n      this.setState({\n        board: board,\n        selectedSquare: {\n          row: destRow,\n          column: destCol\n        }\n      });\n    } else {\n      this.setState({\n        board: board,\n        turn: this.nextPlayer(),\n        selectedSquare: null,\n        animation: true\n      });\n    }\n  }\n\n  canSelectSquare(row, column) {\n    let square = this.state.board[row][column];\n\n    if (!square && square !== 0) {\n      return false;\n    }\n\n    let player = this.state.checkers[square].player;\n    return player === this.state.turn;\n  }\n\n  nextPlayer() {\n    return this.state.turn === PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE;\n  }\n\n  restart() {\n    this.setState({\n      board: this.getBoard(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null\n    });\n  }\n\n  getAllMoves(player) {\n    let moves = {\n      jumps: [],\n      singles: []\n    };\n    let checkers = this.state.checkers;\n    checkers.forEach((checker, i) => {\n      if (checker.player === player && !checker.removed) {\n        let cMoves = this.getMoves(i);\n        moves.jumps = moves.jumps.concat(cMoves.jumps);\n        moves.singles = moves.singles.concat(cMoves.singles);\n      }\n    });\n    return moves;\n  }\n\n  getMoves(checker) {\n    let singles = [];\n    let jumps = [];\n    let c = this.state.checkers[checker];\n    let topRow = c.row - 1;\n    let bottomRow = c.row + 1;\n    let leftCol = c.col - 1;\n    let rightCol = c.col + 1;\n\n    if (c.player === this.state.PLAYER_ONE || c.isKing) {\n      jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\n\n      if (!jumps.length) {\n        singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\n      }\n    }\n\n    if (c.player === this.state.PLAYER_TWO || c.isKing) {\n      jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c));\n\n      if (!jumps.length) {\n        singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\n      }\n    }\n\n    return {\n      singles: singles,\n      jumps: jumps\n    };\n  }\n\n  render() {\n    let playerColor = this.state.turn === 1 ? \"turn-player1\" : \"turn-player2\";\n    let game = React.createElement(\"div\", {\n      id: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"turn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Turn: \", React.createElement(\"span\", {\n      className: playerColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.state.turn === 1 ? \"Player 1\" : \"Player 2\")), React.createElement(Board, {\n      board: this.state.board,\n      checkers: this.state.checkers,\n      selectSquare: this.selectSquare.bind(this),\n      selectedSquare: this.state.selectedSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }));\n    let welcome = React.createElement(\"div\", {\n      className: \"welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Welcome To Checkers Game!\"), React.createElement(\"ul\", {\n      id: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.changeWelcome.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"play\")))));\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.welcome ? welcome : game);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/App.jsx"],"names":["React","Component","Board","PLAYER_ONE","PLAYER_TWO","App","constructor","checkAdjacent","row","left","right","checker","moves","board","length","isKing","i","push","col","state","getBoard","checkers","getCheckers","turn","selectedSquare","winner","welcome","player","removed","changeWelcome","setState","setSquare","selectSquare","isChecker","console","log","handleMove","destRow","destCol","selected","column","canMoveChecker","isJump","isJumpMove","isKingJump","becameKing","moveChecker","getPlayer","makeKing","canKeepJumping","nextPlayer","animation","canSelectSquare","square","restart","getAllMoves","jumps","singles","forEach","cMoves","getMoves","concat","c","topRow","bottomRow","leftCol","rightCol","checkJumps","render","playerColor","game","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Logic from \"./Logic\";\r\nimport Board from \"./Board\";\r\n\r\nconst PLAYER_ONE = 1;\r\nconst PLAYER_TWO = 2;\r\n/*\r\nconst PLAYERS = {\r\n    [PLAYER_ONE]: {\r\n        name: \"Player One\",\r\n        class: \"player-one\"\r\n    },\r\n    [PLAYER_TWO]: {\r\n        name: \"Player Two\",\r\n        class: \"player-two\"\r\n    }\r\n}\r\n*/\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { board: this.getBoard(),\r\n                       checkers: this.getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null,\r\n                       welcome: true};\r\n    \r\n    }\r\n\r\n    getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n\r\n    getCheckers(){\r\n        let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                        {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                        {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                        {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                        {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                        {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n            ]\r\n            return checkers;\r\n    }\r\n\r\n    changeWelcome(){\r\n        this.setState({welcome: false});\r\n    }\r\n\r\n    setSquare(row,col){\r\n        this.setState({selectedSquare: {row: row, col: col}});\r\n    }\r\n\r\n    selectSquare(row,col){\r\n        let isChecker = this.state.board[row][col];\r\n        let player = isChecker && this.state.checkers[isChecker].player;\r\n        if(!this.state.selectedSquare && isChecker && player === this.state.turn){\r\n            this.setSquare(row,col);\r\n            console.log(\"🚪This is resource square of current player\", row, col);\r\n        }\r\n        else if(this.state.selectedSquare){\r\n            console.log(\"🚩This is destination square of current player\", row, col);\r\n            this.handleMove(row,col);\r\n        }\r\n        else{\r\n            console.log(\"🚫This square is OR null OR not of current player\", row, col);\r\n        }\r\n    }\r\n\r\n    handleMove(destRow,destCol){\r\n        console.log(\"handling move...\");\r\n        let board = this.state.board;\r\n        let selected = this.state.selectedSquare;\r\n        let checker = board[selected.row][selected.column];\r\n        if (!this.canMoveChecker(checker, destRow, destCol)) {\r\n          console.log(\"❌illegal move❌\");\r\n          return;\r\n        }\r\n        //board.makeAnimate(checker,destRow,destCol);\r\n        let isJump = this.isJumpMove(checker, destRow, destCol);\r\n        let isKingJump = this.isKingJump(checker, destRow, destCol);\r\n        let becameKing = false;\r\n        this.moveChecker(checker, destRow, destCol);\r\n        if ((!this.isKing(checker) && (this.getPlayer(checker) === PLAYER_ONE && destRow === 0)) || \r\n        (this.getPlayer(checker) === PLAYER_TWO && destRow === ((board.length)-1))) {\r\n          console.log(\"making King....\");\r\n          becameKing = true;\r\n          this.makeKing(checker);\r\n        }\r\n        if(!becameKing && isKingJump && this.canKeepJumping(checker)){\r\n          this.setState({board: board, selectedSquare: {row: destRow, column: destCol}});\r\n        }\r\n        else if (!becameKing && isJump && this.canKeepJumping(checker)) {\r\n          this.setState({board: board, selectedSquare: {row: destRow, column: destCol}});\r\n        } else {\r\n          this.setState({board: board, turn: this.nextPlayer(), selectedSquare: null, animation: true});\r\n        }\r\n    }\r\n\r\n    canSelectSquare(row, column) {\r\n        let square = this.state.board[row][column];\r\n        if (!square && square !== 0) {\r\n          return false;\r\n        }\r\n        let player = this.state.checkers[square].player;\r\n        return player === this.state.turn;\r\n    }\r\n    \r\n    nextPlayer() {\r\n        return (this.state.turn === PLAYER_ONE ? PLAYER_TWO : PLAYER_ONE)\r\n    }\r\n    \r\n    restart() {\r\n        this.setState({ board: this.getBoard(), \r\n                      turn: PLAYER_ONE, selectedSquare: null, winner: null });\r\n    }\r\n\r\n    getAllMoves(player) {\r\n        let moves = {\r\n            jumps: [],\r\n            singles: []\r\n        };\r\n        let checkers = this.state.checkers;\r\n        checkers.forEach((checker, i) => {\r\n            if (checker.player === player && !checker.removed) {\r\n                let cMoves = this.getMoves(i);\r\n                moves.jumps = (moves.jumps).concat(cMoves.jumps);\r\n                moves.singles = (moves.singles).concat(cMoves.singles);\r\n            }\r\n        });\r\n        return moves;\r\n    }\r\n\r\n    getMoves(checker) {\r\n        let singles = [];\r\n        let jumps = [];\r\n        let c = this.state.checkers[checker];\r\n        let topRow = c.row - 1;\r\n        let bottomRow = c.row + 1;\r\n        let leftCol = c.col - 1;\r\n        let rightCol = c.col + 1;\r\n        if (c.player === this.state.PLAYER_ONE || c.isKing) {\r\n            jumps = this.checkJumps(topRow, topRow - 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c);\r\n            if (!jumps.length) {\r\n                singles = this.checkAdjacent(topRow, leftCol, rightCol, c);\r\n            }\r\n        }\r\n        if (c.player === this.state.PLAYER_TWO || c.isKing) {\r\n            jumps = jumps.concat(this.checkJumps(bottomRow, bottomRow + 1, leftCol, rightCol, leftCol - 1, rightCol + 1, c));\r\n            if (!jumps.length) {\r\n                singles = singles.concat(this.checkAdjacent(bottomRow, leftCol, rightCol, c));\r\n            }\r\n        }\r\n        return {\r\n            singles: singles,\r\n            jumps: jumps\r\n        };\r\n    }\r\n\r\n    checkAdjacent = function (row, left, right, checker) {\r\n        let moves = [];\r\n        if (row >= this.board.length || row < 0) {\r\n            return moves;\r\n        }\r\n        if(checker.isKing  && checker.row-row > 0){\r\n            let i=0;\r\n            while(row-i >= 0 && left-i >= 0 && this.board[row-i][left-i] === null){\r\n                moves.push({\r\n                    row: row-i,\r\n                    col: left-i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if(checker.isKing  && checker.row-row < 0){\r\n            let i=0;\r\n            while(row+i < this.board.length && left-i >= 0 && this.board[row+i][left-i] === null){\r\n                moves.push({\r\n                    row: row+i,\r\n                    col: left-i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if (this.board[row][left] === null) {\r\n            moves.push({\r\n                row: row,\r\n                col: left\r\n            });\r\n        }\r\n        if(checker.isKing  && checker.row-row > 0){\r\n            let i=0;\r\n            while(row-i >= 0 && right+i < this.board.length && this.board[row-i][right+i] === null){\r\n                moves.push({\r\n                    row: row-i,\r\n                    col: right+i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if(checker.isKing  && checker.row-row < 0){\r\n            let i=0;\r\n            while(row+i < this.board.length && right+i < this.board.length && this.board[row+i][right+i] === null){\r\n                moves.push({\r\n                    row: row+i,\r\n                    col: right+i\r\n                });\r\n                i++;\r\n            }\r\n        }\r\n        else if (this.board[row][right] === null) {\r\n            moves.push({\r\n                row: row,\r\n                col: right\r\n            });\r\n        }\r\n        return moves;\r\n    }\r\n\r\n\r\n\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n    render(){\r\n       let playerColor = this.state.turn===1 ? \"turn-player1\" : \"turn-player2\";\r\n       let game = ( <div id=\"game\">\r\n                        <h1 id=\"turn\">Turn: <span className={playerColor}>{this.state.turn===1 ? \"Player 1\" : \"Player 2\"}</span></h1>\r\n                        <Board \r\n                        board={this.state.board} \r\n                        checkers={this.state.checkers} \r\n                        selectSquare={this.selectSquare.bind(this)}\r\n                        selectedSquare={this.state.selectedSquare}/>\r\n                    </div>);\r\n\r\n        let welcome = ( <div className=\"welcome\">\r\n                            <div className=\"container\">\r\n                                <h1 id=\"logo\">Welcome To Checkers Game!</h1>\r\n                                <ul id=\"menu\"><li onClick={this.changeWelcome.bind(this)}><span>play</span></li></ul>\r\n                            </div>\r\n                        </div>);\r\n       \r\n    \r\n        return(\r\n            <div className=\"wrapper\">\r\n                {/* <h1>Welcome to checkers game!</h1>\r\n                <Board \r\n                board={this.state.board} \r\n                checkers={this.state.checkers} \r\n                selectSquare={this.selectSquare.bind(this)}\r\n                selectedSquare={this.state.selectedSquare}/> */}\r\n                {this.state.welcome ? welcome : game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}