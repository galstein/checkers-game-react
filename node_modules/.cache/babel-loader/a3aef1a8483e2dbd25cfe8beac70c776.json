{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Logic extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: getBoard(),\n      checkers: getCheckers(),\n      turn: PLAYER_ONE,\n      selectedSquare: null,\n      winner: null\n    };\n  }\n\n  render() {\n    let checkers = getCheckers();\n    console.log(\"checkers is\", checkers);\n    const PLAYER_ONE = 1;\n    const PLAYER_TWO = 2;\n    const PLAYERS = {\n      [PLAYER_ONE]: {\n        name: \"Player One\",\n        class: \"player-one\"\n      },\n      [PLAYER_TWO]: {\n        name: \"Player Two\",\n        class: \"player-two\"\n      }\n    };\n    return null;\n  }\n\n}\n\nfunction getBoard() {\n  let board = [[null, 12, null, 13, null, 14, null, 15], [16, null, 17, null, 18, null, 19, null], [null, 20, null, 21, null, 22, null, 23], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [8, null, 9, null, 10, null, 11, null], [null, 4, null, 5, null, 6, null, 7], [0, null, 1, null, 2, null, 3, null]];\n  return board;\n}\n\nfunction getCheckers() {\n  let checkers = [{\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 0,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 2,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 4,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 7,\n    col: 6,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 1,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 3,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 5,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 6,\n    col: 7,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 0,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 2,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 4,\n    removed: false\n  }, {\n    player: 1,\n    isKing: false,\n    row: 5,\n    col: 6,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 1,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 3,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 5,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 0,\n    col: 7,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 0,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 2,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 4,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 1,\n    col: 6,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 1,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 3,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 5,\n    removed: false\n  }, {\n    player: 2,\n    isKing: false,\n    row: 2,\n    col: 7,\n    removed: false\n  }];\n  return checkers;\n}\n\nLogic.prototype.selectSquare = function (row, col) {\n  if (!this.isChecker) {\n    console.log(\"illegal move\");\n  } else {\n    this.selectedSquare = {\n      row: row,\n      col: col\n    };\n    console.log(\"you choose square:\", row, col, this.selectedSquare);\n  }\n};\n\nexport default Logic;","map":{"version":3,"sources":["C:/Users/galst/Desktop/Projects/checkers-react/src/components/Logic.jsx"],"names":["React","Component","Logic","constructor","state","board","getBoard","checkers","getCheckers","turn","PLAYER_ONE","selectedSquare","winner","render","console","log","PLAYER_TWO","PLAYERS","name","class","player","isKing","row","col","removed","prototype","selectSquare","isChecker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Logic extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = { board: getBoard(),\r\n                       checkers: getCheckers(), \r\n                       turn: PLAYER_ONE, \r\n                       selectedSquare: null, \r\n                       winner: null}\r\n    }\r\n\r\n    render(){\r\n\r\n        let checkers = getCheckers();\r\n        console.log(\"checkers is\",checkers);\r\n        const PLAYER_ONE = 1;\r\n        const PLAYER_TWO = 2;\r\n        const PLAYERS = {\r\n            [PLAYER_ONE]: {\r\n                name: \"Player One\",\r\n                class: \"player-one\"\r\n            },\r\n            [PLAYER_TWO]: {\r\n                name: \"Player Two\",\r\n                class: \"player-two\"\r\n            }\r\n        }\r\n        \r\n\r\n        return(null);\r\n\r\n    }\r\n}\r\n   \r\n    function getBoard(){\r\n        let board = [\r\n                    [null, 12, null, 13, null, 14, null, 15],\r\n                    [16, null, 17, null, 18, null, 19, null],\r\n                    [null, 20, null, 21, null, 22, null, 23],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [null, null, null, null, null, null, null, null],\r\n                    [8, null, 9, null, 10, null, 11, null],\r\n                    [null, 4, null, 5, null, 6, null, 7],\r\n                    [0, null, 1, null, 2, null, 3, null]\r\n        ]\r\n        return board;\r\n    }\r\n\r\n    function getCheckers(){\r\n    let checkers = [{player: 1,isKing: false,row: 7,col: 0,removed: false}, \r\n                    {player: 1,isKing: false,row: 7,col: 2,removed: false},\r\n                    {player: 1,isKing: false,row: 7,col: 4,removed: false},\r\n                    {player: 1,isKing: false,row: 7,col: 6,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 1,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 3,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 5,removed: false},\r\n                    {player: 1,isKing: false,row: 6,col: 7,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 0,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 2,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 4,removed: false},\r\n                    {player: 1,isKing: false,row: 5,col: 6,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 1,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 3,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 5,removed: false},\r\n                    {player: 2,isKing: false,row: 0,col: 7,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 0,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 2,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 4,removed: false},\r\n                    {player: 2,isKing: false,row: 1,col: 6,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 1,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 3,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 5,removed: false},\r\n                    {player: 2,isKing: false,row: 2,col: 7,removed: false}         \r\n        ]\r\n        return checkers;\r\n    }\r\n\r\n\r\n       \r\n  \r\n        \r\n    Logic.prototype.selectSquare = function(row,col){\r\n            if(!this.isChecker){\r\n                console.log(\"illegal move\");\r\n            }\r\n            else{\r\n                this.selectedSquare = {row: row, col: col};\r\n                console.log(\"you choose square:\", row,col,this.selectedSquare);\r\n            }\r\n        }\r\n\r\n   \r\nexport default Logic;"]},"metadata":{},"sourceType":"module"}